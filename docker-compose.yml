version: '3.3'
services:
    # Using databases only to store configurations is nonsense.
    # dbms: ...
    fhem:
        restart: always
        ports:
            - "8083:8083"
            - "8084:8084"
            - "8085:8085"
            - "7072:7072"
        image: fhem/fhem:latest
        volumes:
            - ./fhem:/opt/fhem/
        # user: '501:20'
        environment:
            FHEM_UID: 1000
            FHEM_GID: 1000
            TIMEOUT: 10
            RESTART: 1
            TELNETPORT: 7072
            LANG: en_US.UTF-8
            LANGUAGE: en_US:en
            LC_ADDRESS: de_DE.UTF-8
            LC_MEASUREMENT: de_DE.UTF-8
            LC_MESSAGES: en_DK.UTF-8
            LC_MONETARY: de_DE.UTF-8
            LC_NAME: de_DE.UTF-8
            LC_NUMERIC: de_DE.UTF-8
            LC_PAPER: de_DE.UTF-8
            LC_TELEPHONE: de_DE.UTF-8
            LC_TIME: de_DE.UTF-8
            TZ: Europe/Berlin
            FHEM_USB_DEV: ${FHEM_USB_DEV}
            # CONFIGTYPE: configDB  ## for configurationfrom database
        #devices:
        #    - "${FHEM_USB_DEV}:${FHEM_USB_DEV}"
        networks:
            - fhem-network
    infl:
        image: influxdb:latest
        restart: always
        ports:
            - '8086:8086'
        volumes:
            - ./influx_data:/var/lib/influxdb2:rw
            - ./influx_conf:/etc/influxdb2:rw
            - ./influx_backup:/influx_backup:rw
        environment:
            - INFLUXDB_DB=db0
            - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}
            - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
            - DOCKER_INFLUXDB_INIT_MODE=setup
            - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_INIT_USERNAME}
            - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_INIT_PASSWORD}
            - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_INIT_ORG}
            - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_INIT_BUCKET}
            - DOCKER_INFLUXDB_INIT_RETENTION=${INFLUXDB_INIT_RETENTION}
            - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_INIT_ADMIN_TOKEN}
        networks:
            - fhem-network
    grfn:
        image: grafana/grafana:latest
        ports:
            - '3000:3000'
        volumes:
            - ./grafana_data:/var/lib/grafana:rw
            - ./grafana_provisioning:/etc/grafana/provisioning:rw
        depends_on:
            - infl
        environment:
            - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    tgrf:
        image: telegraf:alpine
        restart: always
        environment:
            HOST_PROC: /rootfs/proc
            HOST_SYS: /rootfs/sys
            HOST_ETC: /rootfs/etc
            DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_INIT_ORG}
            DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_INIT_BUCKET}
            DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_INIT_ADMIN_TOKEN}
        volumes:
            - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - /sys:/rootfs/sys:ro
            - /proc:/rootfs/proc:ro
            - /etc:/rootfs/etc:ro
        depends_on:
            - infl
        networks:
            - fhem-network
    brdg:
        image: oznu/homebridge:latest
        restart: always
        network_mode: host
        volumes:
            - ./homebridge:/homebridge
        environment:
            - PGID=1000
            - PUID=1000
            - HOMEBRIDGE_CONFIG_UI=1
            - HOMEBRIDGE_CONFIG_UI_PORT=8080
            - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_INIT_ORG}
            - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_INIT_BUCKET}
            - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_INIT_ADMIN_TOKEN}

networks:
    fhem-network:
        driver: bridge
